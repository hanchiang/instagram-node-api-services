version: "3.1"

services:
  backend:
    container_name: backend
    ports:
      - "3000:3000"
      - "9229:9229"
      - "9230:9230"
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/home/node/app
      - ./backend/package.json:/home/node/app/package.json
      - ./backend/package-lock.json:/home/node/app/package-lock.json
      - /home/node/app/node_modules
    healthcheck:
      disable: true
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    ports:
      - "80:8080"
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/home/node/app
      - ./frontend/package.json:/home/node/app/package.json
      - ./frontend/package-lock.json:/home/node/app/package-lock.json
      - /home/node/app/node_modules
    healthcheck:
      disable: true
    depends_on:
      - backend

  postgres:
    container_name: postgres
    image: postgres:12.3
    ports:
      - "5432:5432"
    volumes:
      - ./database/postgres:/docker-entrypoint-initdb.d
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 3
